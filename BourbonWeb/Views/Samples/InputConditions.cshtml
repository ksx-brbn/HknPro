@model PaginatedList<BourbonWeb.Models.HansokuSinsei>

@{
    ViewData["Title"] = "販促費申請条件入力（確定）";
}

<div class="d-flex align-items-center justify-content-between mb-1">
    <div class="d-flex align-items-center">
        <p class="mb-0 me-3">販促費申請条件入力（確定）</p>
    </div>
    <div>
        @Model.TotalCount.ToString("N0") 件
    </div>
</div>
@await Html.PartialAsync("_HansokuSinseiMainTable", Model)

<nav aria-label="page navigation" class="mt-3">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="Uncreated" asp-route-pageNumber="@(Model.PageIndex - 1)">前へ</a>
        </li>
        <li class="page-item @(Model.PageIndex == 1 ? "active" : "")">
            <a class="page-link" asp-action="Uncreated" asp-route-pageNumber="1">1</a>
        </li>
        @if (Model.PageIndex > 3)
        {
            <li class="page-item disabled"><span class="page-link">…</span></li>
        }
        @for (var i = Math.Max(2, Model.PageIndex - 1); i <= Math.Min(Model.TotalPages - 1, Model.PageIndex + 1); i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Uncreated" asp-route-pageNumber="@i">@i</a>
            </li>
        }
        @if (Model.PageIndex < Model.TotalPages - 2)
        {
            <li class="page-item disabled"><span class="page-link">…</span></li>
        }
        @if (Model.TotalPages > 1)
        {
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "active" : "")">
                <a class="page-link" asp-action="Uncreated" asp-route-pageNumber="@Model.TotalPages">@Model.TotalPages</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="Uncreated" asp-route-pageNumber="@(Model.PageIndex + 1)">次へ</a>
        </li>
    </ul>
</nav>