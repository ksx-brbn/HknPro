@model PaginatedList<BourbonWeb.Models.Sample>

@{
    ViewData["Title"] = "サンプルデータ一覧";
}

<div class="d-flex justify-content-end align-items-center mb-3">
    <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus"></i> 新規登録</a>
</div>
<div class="card">
    <div class="card-header">
        <form method="get" class="row g-2">
            <div class="col">
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control form-control-sm" placeholder="名称で検索" />
            </div>
            <div class="col-auto">
                <select name="pageSize" class="form-select form-select-sm" onchange="this.form.submit()">
                    <option value="10" selected="@(Model.PageSize == 10)">10件</option>
                    <option value="25" selected="@(Model.PageSize == 25)">25件</option>
                    <option value="50" selected="@(Model.PageSize == 50)">50件</option>
                </select>
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-sm btn-primary">検索</button>
            </div>
            <input type="hidden" name="pageNumber" value="1" />
        </form>
    </div>
    <div class="card-body p-0">
        <div class="p-2 text-end">
            抽出結果件数: @Model.TotalCount.ToString("N0") 件
        </div>
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    <th class="text-center">#</th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Weight)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].TargetYM)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].PaymentDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].UpdatedAt)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].IsActive)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Text1)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Text2)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Text3)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Text4)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Text5)
                    </th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var rowIndex = (Model.PageIndex - 1) * Model.PageSize + 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">@rowIndex</td>
                        <td>
                            <a href="https://www.bourbon.co.jp/">@item.Name</a>
                        </td>
                        <td class="text-end">
                            @item.Price.ToString("N0")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td class="text-end">
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td class="text-end">
                            @Html.DisplayFor(modelItem => item.Weight)
                        </td>
                        <td class="text-center">
                            @item.TargetYM?.ToString("yyyyMM")
                        </td>
                        <td class="text-center">
                            @item.PaymentDate?.ToString("yyyyMMdd")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdatedAt)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsActiveDisplay)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text1)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text2)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text3)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text4)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text5)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm me-1">編集</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm me-1">詳細</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">削除</a>
                        </td>
                    </tr>
                    rowIndex++;
                }
            </tbody>
        </table>
    </div>
</div>

<nav aria-label="page navigation" class="mt-3">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-searchString='@ViewData["CurrentFilter"]' asp-route-pageSize="@Model.PageSize">前へ</a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-route-pageNumber="@i" asp-route-searchString='@ViewData["CurrentFilter"]' asp-route-pageSize="@Model.PageSize">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-searchString='@ViewData["CurrentFilter"]' asp-route-pageSize="@Model.PageSize">次へ</a>
        </li>
    </ul>
</nav>